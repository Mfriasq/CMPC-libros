# Script para iniciar el proyecto en modo producci√≥n
# Ejecutar con: .\start-prod.ps1

Write-Host "üöÄ Iniciando proyecto NestJS + React + PostgreSQL en modo producci√≥n..." -ForegroundColor Green

# Verificar si Docker est√° instalado
if (!(Get-Command docker -ErrorAction SilentlyContinue)) {
    Write-Host "‚ùå Docker no est√° instalado o no est√° en el PATH" -ForegroundColor Red
    Write-Host "Por favor instala Docker Desktop desde: https://www.docker.com/products/docker-desktop" -ForegroundColor Yellow
    exit 1
}

Write-Host "‚úÖ Docker detectado correctamente" -ForegroundColor Green

# Detener contenedores existentes si los hay
Write-Host "üõë Deteniendo contenedores existentes..." -ForegroundColor Yellow
docker-compose down 2>$null

# Construir e iniciar los contenedores en modo producci√≥n
Write-Host "üî® Construyendo e iniciando contenedores para producci√≥n..." -ForegroundColor Yellow
docker-compose up --build -d

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Proyecto iniciado correctamente!" -ForegroundColor Green
    Write-Host "" -ForegroundColor White
    Write-Host "üìç Servicios disponibles:" -ForegroundColor Cyan
    Write-Host "  - Frontend: http://localhost:3000" -ForegroundColor White
    Write-Host "  - Backend API: http://localhost:3001" -ForegroundColor White
    Write-Host "  - Documentaci√≥n API: http://localhost:3001/api/docs" -ForegroundColor White
    Write-Host "  - Adminer (DB): http://localhost:8080" -ForegroundColor White
    Write-Host "" -ForegroundColor White
    Write-Host "üìã Para ver los logs ejecuta: docker-compose logs -f" -ForegroundColor Yellow
    Write-Host "üõë Para detener: docker-compose down" -ForegroundColor Yellow
} else {
    Write-Host "‚ùå Error al iniciar los contenedores" -ForegroundColor Red
}